// SPDX-FileCopyrightText: SAP SE or an SAP affiliate company and Gardener contributors
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by lister-gen. DO NOT EDIT.

package internalversion

import (
	core "github.com/gardener/gardener/pkg/apis/core"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PrivateCloudProfileLister helps list PrivateCloudProfiles.
// All objects returned here must be treated as read-only.
type PrivateCloudProfileLister interface {
	// List lists all PrivateCloudProfiles in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*core.PrivateCloudProfile, err error)
	// PrivateCloudProfiles returns an object that can list and get PrivateCloudProfiles.
	PrivateCloudProfiles(namespace string) PrivateCloudProfileNamespaceLister
	PrivateCloudProfileListerExpansion
}

// privateCloudProfileLister implements the PrivateCloudProfileLister interface.
type privateCloudProfileLister struct {
	indexer cache.Indexer
}

// NewPrivateCloudProfileLister returns a new PrivateCloudProfileLister.
func NewPrivateCloudProfileLister(indexer cache.Indexer) PrivateCloudProfileLister {
	return &privateCloudProfileLister{indexer: indexer}
}

// List lists all PrivateCloudProfiles in the indexer.
func (s *privateCloudProfileLister) List(selector labels.Selector) (ret []*core.PrivateCloudProfile, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*core.PrivateCloudProfile))
	})
	return ret, err
}

// PrivateCloudProfiles returns an object that can list and get PrivateCloudProfiles.
func (s *privateCloudProfileLister) PrivateCloudProfiles(namespace string) PrivateCloudProfileNamespaceLister {
	return privateCloudProfileNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PrivateCloudProfileNamespaceLister helps list and get PrivateCloudProfiles.
// All objects returned here must be treated as read-only.
type PrivateCloudProfileNamespaceLister interface {
	// List lists all PrivateCloudProfiles in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*core.PrivateCloudProfile, err error)
	// Get retrieves the PrivateCloudProfile from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*core.PrivateCloudProfile, error)
	PrivateCloudProfileNamespaceListerExpansion
}

// privateCloudProfileNamespaceLister implements the PrivateCloudProfileNamespaceLister
// interface.
type privateCloudProfileNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PrivateCloudProfiles in the indexer for a given namespace.
func (s privateCloudProfileNamespaceLister) List(selector labels.Selector) (ret []*core.PrivateCloudProfile, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*core.PrivateCloudProfile))
	})
	return ret, err
}

// Get retrieves the PrivateCloudProfile from the indexer for a given namespace and name.
func (s privateCloudProfileNamespaceLister) Get(name string) (*core.PrivateCloudProfile, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(core.Resource("privatecloudprofile"), name)
	}
	return obj.(*core.PrivateCloudProfile), nil
}
